/*
 * Copyright 1/1/18 7:29 PM randhirgupta
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {

    def globalConfiguration = rootProject.ext

    compileSdkVersion globalConfiguration.androidCompileSdkVersion
    buildToolsVersion globalConfiguration.androidBuildToolsVersion

    defaultConfig {
        minSdkVersion globalConfiguration.androidMinSdkVersion
        targetSdkVersion globalConfiguration.androidTargetSdkVersion

        versionCode globalConfiguration.dataLibraryVersionCode
        versionName globalConfiguration.dataLibraryVersionName

        testInstrumentationRunner globalConfiguration.testInstrumentationRunner

    }
    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    signingConfigs {
        debug {
            storeFile file('../buildsystem/debug.keystore')
            storePassword 'iluvp2hys1c-s'
            keyAlias 'cyborg'
            keyPassword 'iluvp2hys1c-s'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

// Required for annotation processing plugins like Dagger
kapt {
    generateStubs = true
}

dependencies {
    def unitTestDependencies = rootProject.ext.unitTesting
    def acceptanceTestDependencies = rootProject.ext.acceptanceTesting
    def commonDependencies = rootProject.ext.commonDependencies
    def presentationDependencies = rootProject.ext.presentationDependencies
    def compileTimeDependencies = rootProject.ext.compileTimeDependencies
    def dataDependencies = rootProject.ext.dataDependencies
    def exoPlayerDependencies = rootProject.ext.exoplayerDependencies

    for (dependency in commonDependencies) {
        compile dependency.value
    }

    for (dependency in presentationDependencies) {
        compile dependency.value
    }

    for (dependency in unitTestDependencies) {
        testCompile dependency.value
    }

    for (dependency in acceptanceTestDependencies) {
        androidTestCompile dependency.value
    }

    for (dependency in dataDependencies) {
        compile dependency.value
    }

    for (dependency in exoPlayerDependencies) {
        compile dependency.value
    }

    //Compile Dependencies
    kapt compileTimeDependencies.daggerCompiler
    provided compileTimeDependencies.javaxAnnotation
    provided compileTimeDependencies.javaxInject

}
